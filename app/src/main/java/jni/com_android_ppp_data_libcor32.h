/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class com_android_ppp_data_libcor32 */

#ifndef _Included_com_android_ppp_data_libcor32
#define _Included_com_android_ppp_data_libcor32
#ifdef __cplusplus
extern "C" {
#endif

#include <android/log.h> // only use in NDK
#define LOG_TAG "PPX_NATIVE"
#define LOGE(...) ((void)__android_log_print(ANDROID_LOG_ERROR, LOG_TAG, __VA_ARGS__))
#define LOGD(...) ((void)__android_log_print(ANDROID_LOG_DEBUG, LOG_TAG, __VA_ARGS__))
#define LOGI(...) ((void)__android_log_print(ANDROID_LOG_INFO, LOG_TAG, __VA_ARGS__))
#define LOGW(...) ((void)__android_log_print(ANDROID_LOG_WARN, LOG_TAG, __VA_ARGS__))

/*
 * Class:     com_android_ppp_data_libcor32
 * Method:    sendack
 * Signature: (II)Z
 */
JNIEXPORT jboolean JNICALL Java_com_android_ppp_data_libcor32_sendack
  (JNIEnv *, jobject, jint, jint);

/*
 * Class:     com_android_ppp_data_libcor32
 * Method:    closesocket
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_com_android_ppp_data_libcor32_closesocket
  (JNIEnv *, jobject, jint);

/*
 * Class:     com_android_ppp_data_libcor32
 * Method:    create_unix_socket
 * Signature: (Ljava/lang/String;)I
 */
JNIEXPORT jint JNICALL Java_com_android_ppp_data_libcor32_create_1unix_1socket
  (JNIEnv *, jobject, jstring);

/*
 * Class:     com_android_ppp_data_libcor32
 * Method:    recvfd
 * Signature: (I)[I
 */
JNIEXPORT jintArray JNICALL Java_com_android_ppp_data_libcor32_recvfd
  (JNIEnv *, jobject, jint);

#ifdef __cplusplus
}
#endif
#endif
